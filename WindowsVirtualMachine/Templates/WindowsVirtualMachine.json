{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsNamesForPublicIP": {
      "type": "array",
      "metadata": {
        "description": "Unique DNS Names for the Public IP used to access the Virtual Machine."
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    },
    "assetsUri": {
      "metadata": {
        "description": "One or many asset URI that will be downloaded by CustomScriptExtension"
      },
      "type": "array"
    },
    "scriptToRun": {
      "metadata": {
        "description": "The script to run by CustomScriptExtension"
      },
      "type": "string"
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "OSDiskName": "osdiskforwindowssimple",
    "nicName": "myVMNic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountType": "Premium_LRS",
    "publicIPAddressName": "myPublicIP",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "MyWindowsVM",
    "vmSize": "Standard_DS3",
    "virtualNetworkName": "MyVNET",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnetRef": "[concat( variables('vnetID'), '/subnets/', variables('subnetName') )]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat( variables('publicIPAddressName'), copyIndex() )]",
      "location": "[variables('location')]",
      "copy": {
        "name": "publicIpCopy",
        "count": "[length( parameters('dnsNamesForPublicIP') )]"
      },
      "tags": {
        "displayName": "[concat( 'PublicIPAddress', copyIndex() )]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNamesForPublicIP')[copyIndex()] ]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat( variables('nicName'), copyIndex() )]",
      "location": "[variables('location')]",
      "copy": {
        "name": "nicCopy",
        "count": "[length( parameters('dnsNamesForPublicIP') )]"
      },
      "tags": {
        "displayName": "[concat( 'NetworkInterface', copyIndex() )]"
      },
      "dependsOn": [
        "[concat( 'Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), copyIndex() )]",
        "[concat( 'Microsoft.Network/virtualNetworks/', variables('virtualNetworkName') )]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig', copyIndex())]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat( variables('publicIPAddressName'), copyIndex() ) )]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat( variables('vmName'), copyIndex() )]",
      "location": "[variables('location')]",
      "copy": {
        "name": "vmCopy",
        "count": "[length( parameters('dnsNamesForPublicIP') )]"
      },
      "tags": {
        "displayName": "[concat('VirtualMachine', copyIndex() )]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName') )]",
        "[concat('Microsoft.Network/networkInterfaces/', concat( variables('nicName'), copyIndex() ) )]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computername": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat( 'http://', parameters('newStorageAccountName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('OSDiskName'), '-', copyIndex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat( variables('nicName'), copyIndex() ) )]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), copyIndex(), '/PowerShellCommand')]",
      "location": "[variables('location')]",
      "copy": {
        "name": "cseCopy",
        "count": "[length( parameters('dnsNamesForPublicIP') )]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', concat( variables('vmName'), copyIndex() ) )]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": "true",
        "settings": {
          "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File ', parameters('scriptToRun'))]",
          "fileUris": "[parameters('assetsUri')]"
        }
      }
    }
  ]
}
